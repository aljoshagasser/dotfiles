!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#	vim/vim.symlink/plugin/vm.vim	/^inoremap <buffer> # X#$/;"	m
,p	vim/vim.symlink/ftplugin/markdown.vim	/^map ,p :call PreviewMarkdown()<CR>$/;"	m
<C-W><C-F>	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-]>	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>f	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-]>	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<Plug>Commentary	vim/vim.symlink/bundle/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>Commentary     :<C-U>set opfunc=<SID>go<CR>g@$/;"	m
<Plug>CommentaryLine	vim/vim.symlink/bundle/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryLine :<C-U>call <SID>go(v:count1)<CR>$/;"	m
<Plug>ToggleBackground	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<SID>TogBG	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>xx	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SID>xx	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<c-r><tab>	vim/vim.symlink/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<s-tab>	vim/vim.symlink/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	vim/vim.symlink/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
AR	vim/vim.symlink/ruby/command-t/Makefile	/^AR = ar$/;"	m
Abbrev	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
Ack	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack call s:Ack('grep<bang>',<q-args>)$/;"	c
Ack	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^function! s:Ack(cmd, args)$/;"	f
AckAdd	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd call s:Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile call s:Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call s:AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckFromSearch	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^function! s:AckFromSearch(cmd, args)$/;"	f
AddBracketExpand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddParenExpand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddSelectiveExpand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
Alternate	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
BINDIR	vim/vim.symlink/ruby/command-t/Makefile	/^BINDIR        = $(bindir)$/;"	m
BackupDir	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  class BackupDir$/;"	c	class:VimRubyInstaller
Blame	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Browse	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufAbbreviations	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufFinderCommands	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufFinderCommands()$/;"	f
BufInit	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufMappings	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufModelines	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufModelines()$/;"	f
BufNavCommands	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufReadIndex	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufScriptWrappers	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSyntax	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWriteIndexFile	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
Buffer	vim/vim.symlink/bundle/Command-T/spec/command-t/scanner/buffer_scanner_spec.rb	/^  class Buffer; end$/;"	c	class:VIM
BufferFinder	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferFinder	vim/vim.symlink/ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferScanner	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
BufferScanner	vim/vim.symlink/ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
CC	vim/vim.symlink/ruby/command-t/Makefile	/^CC = gcc$/;"	m
CFLAGS	vim/vim.symlink/ruby/command-t/Makefile	/^CFLAGS   =  -fno-common -arch i386 -arch x86_64 -g -Os -pipe -fno-common -DENABLE_DTRACE  -fno-common  -pipe -fno-common $(cflags) $/;"	m
CLEANFILES	vim/vim.symlink/ruby/command-t/Makefile	/^CLEANFILES = mkmf.log$/;"	m
CLEANLIBS	vim/vim.symlink/ruby/command-t/Makefile	/^CLEANLIBS     = $(TARGET).bundle $(TARGET).il? $(TARGET).tds $(TARGET).map$/;"	m
CLEANOBJS	vim/vim.symlink/ruby/command-t/Makefile	/^CLEANOBJS     = *.o *.a *.s[ol] *.pdb *.exp *.bak$/;"	m
COPY	vim/vim.symlink/ruby/command-t/Makefile	/^COPY = cp$/;"	m
CPPFLAGS	vim/vim.symlink/ruby/command-t/Makefile	/^CPPFLAGS = -DHAVE_RUBY_H  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE $(DEFS) $(cppflags)$/;"	m
CXXFLAGS	vim/vim.symlink/ruby/command-t/Makefile	/^CXXFLAGS = $(CFLAGS) $/;"	m
CharacterRun	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  class CharacterRun < Struct.new(:string, :inside) #:nodoc:$/;"	c	class:FuzzyFileFinder
Close	vim/vim.symlink/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CoffeeCompile	vim/vim.symlink/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileComplete	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileComplete(arg, cmdline, cursor)$/;"	f
CoffeeCompileResetVars	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileRestorePos	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileRestorePos()$/;"	f
CoffeeCompileSavePos	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileSavePos()$/;"	f
CoffeeCompileUpdate	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileUpdate(startline, endline)$/;"	f
CoffeeCompileWatchUpdate	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:CoffeeCompileWatchUpdate()$/;"	f
CoffeeMake	vim/vim.symlink/ftplugin/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake make<bang> <args>$/;"	c
CoffeeRun	vim/vim.symlink/ftplugin/coffee.vim	/^command! -range=% -bar CoffeeRun <line1>,<line2>:w !coffee -s$/;"	c
CommandEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd,name,prefix,suffix,filter,default,...)$/;"	f
CommandList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommandT	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^command -nargs=? -complete=dir CommandT call <SID>CommandTShowFileFinder(<q-args>)$/;"	c
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/jump_finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/tag_finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/jump_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/tag_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	vim/vim.symlink/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTAcceptSelection	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTAcceptSelection()$/;"	f
CommandTAcceptSelectionSplit	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTAcceptSelectionSplit()$/;"	f
CommandTAcceptSelectionTab	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTAcceptSelectionTab()$/;"	f
CommandTAcceptSelectionVSplit	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTAcceptSelectionVSplit()$/;"	f
CommandTBackspace	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTBackspace()$/;"	f
CommandTBuffer	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^command CommandTBuffer call <SID>CommandTShowBufferFinder()$/;"	c
CommandTCancel	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTCancel()$/;"	f
CommandTClear	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTClear()$/;"	f
CommandTCursorEnd	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTCursorEnd()$/;"	f
CommandTCursorLeft	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTCursorLeft()$/;"	f
CommandTCursorRight	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTCursorRight()$/;"	f
CommandTCursorStart	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTCursorStart()$/;"	f
CommandTDelete	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTDelete()$/;"	f
CommandTFlush	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^command CommandTFlush call <SID>CommandTFlush()$/;"	c
CommandTFlush	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function s:CommandTFlush()$/;"	f
CommandTHandleKey	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTHandleKey(arg)$/;"	f
CommandTJump	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^command CommandTJump call <SID>CommandTShowJumpFinder()$/;"	c
CommandTMatch_initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatch_initialize	vim/vim.symlink/ruby/command-t/match.c	/^VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatch_matches	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^VALUE CommandTMatch_matches(VALUE self)$/;"	f
CommandTMatch_matches	vim/vim.symlink/ruby/command-t/match.c	/^VALUE CommandTMatch_matches(VALUE self)$/;"	f
CommandTMatch_to_s	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^VALUE CommandTMatch_to_s(VALUE self)$/;"	f
CommandTMatch_to_s	vim/vim.symlink/ruby/command-t/match.c	/^VALUE CommandTMatch_to_s(VALUE self)$/;"	f
CommandTMatcher_initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_initialize	vim/vim.symlink/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_matches_for	vim/vim.symlink/bundle/Command-T/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev)$/;"	f
CommandTMatcher_matches_for	vim/vim.symlink/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev)$/;"	f
CommandTMatcher_sorted_matches_for	vim/vim.symlink/bundle/Command-T/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options)$/;"	f
CommandTMatcher_sorted_matches_for	vim/vim.symlink/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options)$/;"	f
CommandTRubyWarning	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function s:CommandTRubyWarning()$/;"	f
CommandTSelectNext	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTSelectNext()$/;"	f
CommandTSelectPrev	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTSelectPrev()$/;"	f
CommandTShowBufferFinder	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function s:CommandTShowBufferFinder()$/;"	f
CommandTShowFileFinder	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function s:CommandTShowFileFinder(arg)$/;"	f
CommandTShowJumpFinder	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function s:CommandTShowJumpFinder()$/;"	f
CommandTShowTagFinder	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function s:CommandTShowTagFinder()$/;"	f
CommandTTag	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^command CommandTTag call <SID>CommandTShowTagFinder()$/;"	c
CommandTToggleFocus	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^function CommandTToggleFocus()$/;"	f
CommandT_option_from_hash	vim/vim.symlink/bundle/Command-T/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
CommandT_option_from_hash	vim/vim.symlink/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
Commit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompilerSet	vim/vim.symlink/bundle/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/vim.symlink/bundle/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/vim.symlink/bundle/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/vim.symlink/bundle/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete_cd	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_rake	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_rake(A,L,P)$/;"	f
Complete_related	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
Complete_set	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_set(A,L,P)$/;"	f
Controller	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
Controller	vim/vim.symlink/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
CreateMenus	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:CreateMenus() abort$/;"	f
CustomComplete	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
DEFFILE	vim/vim.symlink/ruby/command-t/Makefile	/^DEFFILE = $/;"	m
DEFS	vim/vim.symlink/ruby/command-t/Makefile	/^DEFS     = $/;"	m
DISTCLEANFILES	vim/vim.symlink/ruby/command-t/Makefile	/^DISTCLEANFILES = $/;"	m
DLDFLAGS	vim/vim.symlink/ruby/command-t/Makefile	/^DLDFLAGS = $(ldflags) $(dldflags) $(archflag)$/;"	m
DLLIB	vim/vim.symlink/ruby/command-t/Makefile	/^DLLIB = $(TARGET).bundle$/;"	m
DefRuby	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
Detect	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Detect(path)$/;"	f
Detect	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
Diff	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...) abort$/;"	f
DirComplete	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Directory	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  class Directory #:nodoc:$/;"	c	class:FuzzyFileFinder
Doc	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Doc(bang, string)$/;"	f
EXEEXT	vim/vim.symlink/ruby/command-t/Makefile	/^EXEEXT = $/;"	m
EXTSTATIC	vim/vim.symlink/ruby/command-t/Makefile	/^EXTSTATIC = $/;"	m
Edit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
Edit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
EditComplete	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EditSimpleRb	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:EditSimpleRb(cmd,name,target,prefix,suffix,...)$/;"	f
Env	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class Env$/;"	c
ErrMsg	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
ExecuteInTree	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExitingOneLineScope	vim/vim.symlink/indent/javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Extract	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractGitDir	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
FileFinder	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileFinder	vim/vim.symlink/ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileLimitExceeded	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileLimitExceeded	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileRead	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileScanner	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
FileScanner	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
FileSystemEntry	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  class FileSystemEntry #:nodoc:$/;"	c	class:FuzzyFileFinder
FileWriter	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class FileWriter$/;"	c
Find	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Find   :call s:Grep(<q-bang>, <q-args>, 'find')$/;"	c
Find	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindComment	vim/vim.symlink/indent/coffee.vim	/^function! s:FindComment(linenum)$/;"	f
FindRightmostOpenBracket	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:FindRightmostOpenBracket(lnum)$/;"	f
Finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
Finder	vim/vim.symlink/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
FinishCommit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
Foo	vim/vim.symlink/bundle/vim-ruby/etc/examples/indent/nested_hashes.rb	/^class Foo$/;"	c
Formatter	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^    module Formatter$/;"	m	class:Spec.Runner
FuzzyFileFinder	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^class FuzzyFileFinder$/;"	c
GF	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetBufferRubyClass	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCoffeeIndent	vim/vim.symlink/indent/coffee.vim	/^function! GetCoffeeIndent(curlinenum)$/;"	f
GetCoffeeIndent	vim/vim.symlink/indent/coffee.vim	/^function! s:GetCoffeeIndent(curlinenum)$/;"	f
GetErubyIndent	vim/vim.symlink/bundle/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetJavascriptIndent	vim/vim.symlink/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetMSL	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	vim/vim.symlink/indent/javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMatch	vim/vim.symlink/indent/coffee.vim	/^function! s:GetMatch(curline)$/;"	f
GetPrevNormalLine	vim/vim.symlink/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetRubyIndent	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetTrimmedLine	vim/vim.symlink/indent/coffee.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
Git	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
Grep	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^function! s:Grep(bang,args,prg) abort$/;"	f
Grep	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
Helptags	vim/vim.symlink/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiDefaults	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
HiLink	vim/vim.symlink/syntax/haml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/vim.symlink/syntax/haml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim/vim.symlink/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/vim.symlink/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim/vim.symlink/syntax/less.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/vim.symlink/syntax/less.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HtmlHiLink	vim/vim.symlink/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	vim/vim.symlink/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	vim/vim.symlink/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	vim/vim.symlink/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	vim/vim.symlink/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	vim/vim.symlink/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	vim/vim.symlink/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	vim/vim.symlink/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	vim/vim.symlink/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	vim/vim.symlink/indent/html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	vim/vim.symlink/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
INCFLAGS	vim/vim.symlink/ruby/command-t/Makefile	/^INCFLAGS = -I. -I$(topdir) -I$(hdrdir) -I$(srcdir)$/;"	m
INSTALL	vim/vim.symlink/ruby/command-t/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	vim/vim.symlink/ruby/command-t/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROG	vim/vim.symlink/ruby/command-t/Makefile	/^INSTALL_PROG = $(INSTALL) -m 0755$/;"	m
InOneLineScope	vim/vim.symlink/indent/javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IndentWithContinuation	vim/vim.symlink/indent/javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
Init_ext	vim/vim.symlink/bundle/Command-T/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
Init_ext	vim/vim.symlink/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
Invert	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
IsComment	vim/vim.symlink/indent/coffee.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsCommentLine	vim/vim.symlink/indent/coffee.vim	/^function! s:IsCommentLine(linenum)$/;"	f
IsCommentOrString	vim/vim.symlink/indent/coffee.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsInClassDef	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInString	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	vim/vim.symlink/indent/javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	vim/vim.symlink/indent/javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInStringOrDocumentation	vim/vim.symlink/indent/javascript.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsPosInClassDef	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsString	vim/vim.symlink/indent/coffee.vim	/^function! s:IsString(linenum, col)$/;"	f
JumpFinder	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/jump_finder.rb	/^  class JumpFinder < Finder$/;"	c	class:CommandT
JumpInit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpScanner	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/jump_scanner.rb	/^  class JumpScanner < Scanner$/;"	c	class:CommandT
LAck	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck call s:Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd call s:Ack('lgrepadd<bang>', <q-args>)$/;"	c
LDSHARED	vim/vim.symlink/ruby/command-t/Makefile	/^LDSHARED = cc -arch i386 -arch x86_64 -pipe -bundle -undefined dynamic_lookup$/;"	m
LIBPATH	vim/vim.symlink/ruby/command-t/Makefile	/^LIBPATH =  -L. -L$(libdir)$/;"	m
LIBRUBY	vim/vim.symlink/ruby/command-t/Makefile	/^LIBRUBY = $(LIBRUBY_SO)$/;"	m
LIBRUBYARG_SHARED	vim/vim.symlink/ruby/command-t/Makefile	/^LIBRUBYARG_SHARED = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBYARG_STATIC	vim/vim.symlink/ruby/command-t/Makefile	/^LIBRUBYARG_STATIC = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBY_A	vim/vim.symlink/ruby/command-t/Makefile	/^LIBRUBY_A = lib$(RUBY_SO_NAME)-static.a$/;"	m
LIBS	vim/vim.symlink/ruby/command-t/Makefile	/^LIBS = $(LIBRUBYARG_SHARED)  -lpthread -ldl  $/;"	m
LOCAL_LIBS	vim/vim.symlink/ruby/command-t/Makefile	/^LOCAL_LIBS = $/;"	m
LineHasOpeningBrackets	vim/vim.symlink/indent/javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LocalModelines	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:LocalModelines(lnum)$/;"	f
Locate	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang -complete=file -nargs=+ Locate :call s:Grep(<q-bang>, <q-args>, 'locate')$/;"	c
Log	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Log	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MAKEDIRS	vim/vim.symlink/ruby/command-t/Makefile	/^MAKEDIRS = mkdir -p$/;"	m
Match	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
Match	vim/vim.symlink/indent/javascript.vim	/^function s:Match(lnum, regex)$/;"	f
MatchLast	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchWindow	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
MatchWindow	vim/vim.symlink/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
MaxLookback	vim/vim.symlink/indent/coffee.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
Move	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
Navcommand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
Numeric	bin/git-wtf	/^class Numeric; def pluralize s; "#{to_s} #{s}" + (self != 1 ? "s" : "") end end$/;"	c
OBJS	vim/vim.symlink/ruby/command-t/Makefile	/^OBJS = ext.o match.o matcher.o$/;"	m
PathUtilities	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
PathUtilities	vim/vim.symlink/ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
PrevNonBlankNonString	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	vim/vim.symlink/indent/javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Preview	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang,lnum,arg)$/;"	f
ProjectMenu	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:ProjectMenu()$/;"	f
Prompt	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
Prompt	vim/vim.symlink/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
RARRAY_LEN	vim/vim.symlink/bundle/Command-T/ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_LEN	vim/vim.symlink/ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_PTR	vim/vim.symlink/bundle/Command-T/ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
RARRAY_PTR	vim/vim.symlink/ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
RFLOAT_VALUE	vim/vim.symlink/bundle/Command-T/ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RFLOAT_VALUE	vim/vim.symlink/ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RM	vim/vim.symlink/ruby/command-t/Makefile	/^RM = rm -f$/;"	m
RSTRING_LEN	vim/vim.symlink/bundle/Command-T/ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_LEN	vim/vim.symlink/ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_PTR	vim/vim.symlink/bundle/Command-T/ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RSTRING_PTR	vim/vim.symlink/ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RUBY	vim/vim.symlink/ruby/command-t/Makefile	/^RUBY = $(ruby)$/;"	m
RUBYARCHDIR	vim/vim.symlink/ruby/command-t/Makefile	/^RUBYARCHDIR   = $(sitearchdir)$(target_prefix)$/;"	m
RUBYCOMMONDIR	vim/vim.symlink/ruby/command-t/Makefile	/^RUBYCOMMONDIR = $(sitedir)$(target_prefix)$/;"	m
RUBYLIBDIR	vim/vim.symlink/ruby/command-t/Makefile	/^RUBYLIBDIR    = $(sitelibdir)$(target_prefix)$/;"	m
RUBY_EXTCONF_H	vim/vim.symlink/ruby/command-t/Makefile	/^RUBY_EXTCONF_H = $/;"	m
RUBY_INSTALL_NAME	vim/vim.symlink/ruby/command-t/Makefile	/^RUBY_INSTALL_NAME = ruby$/;"	m
RUBY_SO_NAME	vim/vim.symlink/ruby/command-t/Makefile	/^RUBY_SO_NAME = ruby$/;"	m
Rails	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|call rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsHelpCommand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsHelpCommand(...)$/;"	f
RailsIncludeexpr	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Refresh	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
Related	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
Remove	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Remove :Unlink<bang>$/;"	c
Remove	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
Rename	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar -nargs=1 -bang -complete=file Rename :$/;"	c
ReplaceCmd	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
RubyBalloonexpr	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
Runner	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^  module Runner$/;"	m	class:Spec
SHELL	vim/vim.symlink/ruby/command-t/Makefile	/^SHELL = \/bin\/sh$/;"	m
SRCS	vim/vim.symlink/ruby/command-t/Makefile	/^SRCS = ext.c match.c matcher.c$/;"	m
STATIC_LIB	vim/vim.symlink/ruby/command-t/Makefile	/^STATIC_LIB = $/;"	m
Scanner	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Scanner	vim/vim.symlink/ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Screen	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
Screen	vim/vim.symlink/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
Screen	vim/vim.symlink/ruby/vim/screen.rb	/^  module Screen$/;"	m	class:VIM
SearchPair	vim/vim.symlink/indent/coffee.vim	/^function! s:SearchPair(start, end)$/;"	f
Set	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath()$/;"	f
SetMakePrg	vim/vim.symlink/ftplugin/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetOptDefault	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:SetOptDefault(opt,val)$/;"	f
SetOption	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
Settings	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
Settings	vim/vim.symlink/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
ShouldSkip	vim/vim.symlink/indent/coffee.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
SkipExpr	vim/vim.symlink/indent/coffee.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SmartSearch	vim/vim.symlink/indent/coffee.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
SolarizedHiTrail	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Spec	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^module Spec$/;"	m
StageDiff	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StagePatch	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReloadSeek	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
Status	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
String	bin/git-rank-contributers	/^class String$/;"	c
Stub	vim/vim.symlink/bundle/Command-T/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
Stub	vim/vim.symlink/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
SudoWrite	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar SudoWrite :$/;"	c
SyntaxName	vim/vim.symlink/indent/coffee.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
TARGET	vim/vim.symlink/ruby/command-t/Makefile	/^TARGET = ext$/;"	m
TARGET_SO	vim/vim.symlink/ruby/command-t/Makefile	/^TARGET_SO     = $(DLLIB)$/;"	m
TagFinder	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/tag_finder.rb	/^  class TagFinder < Finder$/;"	c	class:CommandT
TagList_IsValid	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagScanner	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/tag_scanner.rb	/^  class TagScanner < Scanner$/;"	c	class:CommandT
TargetDirectory	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory$/;"	c
TargetDirectory	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory::Finder$/;"	c
TheCWord	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:TheCWord()$/;"	f
Tlist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
TogBG	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
TooManyEntries	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  class TooManyEntries < RuntimeError; end$/;"	c	class:FuzzyFileFinder
ToolBar.togglebg	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
Unlink	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar -bang Unlink :$/;"	c
VIM	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/bundle/Command-T/spec/command-t/controller_spec.rb	/^module VIM; end$/;"	m
VIM	vim/vim.symlink/bundle/Command-T/spec/command-t/finder/buffer_finder_spec.rb	/^module VIM; end$/;"	m
VIM	vim/vim.symlink/bundle/Command-T/spec/command-t/finder/file_finder_spec.rb	/^module VIM; end$/;"	m
VIM	vim/vim.symlink/bundle/Command-T/spec/command-t/scanner/buffer_scanner_spec.rb	/^module VIM$/;"	m
VIM	vim/vim.symlink/bundle/Command-T/spec/command-t/scanner/file_scanner_spec.rb	/^module VIM; end$/;"	m
VIM	vim/vim.symlink/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/vim.symlink/ruby/vim.rb	/^module VIM$/;"	m
VIM	vim/vim.symlink/ruby/vim/screen.rb	/^module VIM$/;"	m
VIM	vim/vim.symlink/ruby/vim/window.rb	/^module VIM$/;"	m
VPATH	vim/vim.symlink/ruby/command-t/Makefile	/^VPATH = $(srcdir):$(topdir):$(hdrdir)$/;"	m
Version	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  module Version$/;"	m	class:FuzzyFileFinder
VimFormatter	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^      class VimFormatter < BaseTextFormatter$/;"	c	class:Spec.Runner.Formatter
VimRubyInstaller	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class VimRubyInstaller$/;"	c
W	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^command! -bar W :call s:W()$/;"	c
W	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^function! s:W() abort$/;"	f
Window	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
Window	vim/vim.symlink/ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
Window	vim/vim.symlink/ruby/vim/window.rb	/^  class Window$/;"	c	class:VIM
Window.Toggle\	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
Wq	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
[M	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def [](path)$/;"	f	class:VimRubyInstaller.BackupDir
[]	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def [](path)$/;"	f	class:TargetDirectory
[]	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[m	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
\\	vim/vim.symlink/bundle/vim-commentary/plugin/commentary.vim	/^  nmap \\\\  <Plug>Commentary$/;"	m
\\\	vim/vim.symlink/bundle/vim-commentary/plugin/commentary.vim	/^  nmap \\\\\\ <Plug>CommentaryLine$/;"	m
]M	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]m	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
_ensure_directory_exists	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _ensure_directory_exists(path)$/;"	f	class:FileWriter
_potential_directories	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _potential_directories$/;"	f	class:TargetDirectory
_same_contents?	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _same_contents?(p1, p2)$/;"	f	class:VimRubyInstaller
_valid_vim_ruby_dir	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env._valid_vim_ruby_dir(dir)$/;"	F	class:Env
_vim_system_dir	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_system_dir$/;"	f	class:TargetDirectory
_vim_user_dir	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_user_dir$/;"	f	class:TargetDirectory
aM	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abbrev_len	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    long    abbrev_len;             \/\/ length of same$/;"	m	struct:__anon1	file:
abbrev_len	vim/vim.symlink/ruby/command-t/match.c	/^    long    abbrev_len;             \/\/ length of same$/;"	m	struct:__anon2	file:
abbrev_p	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    char    *abbrev_p;              \/\/ pointer to search string (abbreviation)$/;"	m	struct:__anon1	file:
abbrev_p	vim/vim.symlink/ruby/command-t/match.c	/^    char    *abbrev_p;              \/\/ pointer to search string (abbreviation)$/;"	m	struct:__anon2	file:
abbrev_segments	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
abbrev_segments	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
abolish_l	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
accept_selection	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller
accept_selection	vim/vim.symlink/ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller
add!	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add!	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add_methods	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_paths_for_directory	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
add_paths_for_directory	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
addfilecmds	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
ahead_behind_string	bin/git-wtf	/^def ahead_behind_string ahead, behind$/;"	f	class:red.green.yellow.cyan.grey.purple.commits_between
always_show_dot_files	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:
always_show_dot_files	vim/vim.symlink/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon2	file:
am	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
app_background_script_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_background_script_command(cmd) dict abort$/;"	f
app_dbext_settings	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_destroy_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_destroy_command(bang,...) dict$/;"	f
app_environments	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_script_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_script_command(cmd) dict abort$/;"	f
app_file	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name)$/;"	f
app_find_file	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_generate_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_generate_command(bang,...) dict$/;"	f
app_generators	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict$/;"	f
app_has	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_lightweight_ruby_eval	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_path	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_rake_tasks	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_shell_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_shell_command(cmd) dict abort$/;"	f
app_runner_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_runner_command(count,args) dict$/;"	f
app_script_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_script_shell_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_shell_command(cmd) dict abort$/;"	f
app_server_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_source_callback	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_source_callback(file) dict$/;"	f
app_tags_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
arch	vim/vim.symlink/ruby/command-t/Makefile	/^arch = universal-darwin10.0$/;"	m
archdir	vim/vim.symlink/ruby/command-t/Makefile	/^archdir = $(rubylibdir)\/$(arch)$/;"	m
archflag	vim/vim.symlink/ruby/command-t/Makefile	/^archflag = $/;"	m
ask_user	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.ask_user(message)$/;"	F	class:Env
autocamelize	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autoload	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
b:browsefilter	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:current_syntax	vim/vim.symlink/bundle/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	vim/vim.symlink/bundle/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	vim/vim.symlink/syntax/eco.vim	/^let b:current_syntax = 'eco'$/;"	v
b:current_syntax	vim/vim.symlink/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/mustache.vim	/^let b:current_syntax = "mustache"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	vim/vim.symlink/syntax/vm.vim	/^let b:current_syntax = "vtl"$/;"	v
b:did_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/vim.symlink/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/vim.symlink/plugin/vm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vim/vim.symlink/bundle/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/vim.symlink/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/vim.symlink/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/vim.symlink/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^      let b:eco_subtype = b:current_syntax$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^      let b:eco_subtype = g:eco_default_subtype$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^    let b:eco_subtype = 'html'$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^    let b:eco_subtype = 'javascript'$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^    let b:eco_subtype = 'ruby'$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^    let b:eco_subtype = 'text'$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^    let b:eco_subtype = 'yaml'$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^    let b:eco_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eco\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eco_subtype	vim/vim.symlink/syntax/eco.vim	/^  let b:eco_subtype = matchstr(s:lines,'eco_subtype=\\zs\\w\\+')$/;"	v
b:eruby_nest_level	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	vim/vim.symlink/bundle/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:javascript_fold	vim/vim.symlink/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:match_ignorecase	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	vim/vim.symlink/plugin/vm.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_skip	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	vim/vim.symlink/plugin/vm.vim	/^    let b:match_skip = 's:comment\\|string'$/;"	v
b:match_words	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	vim/vim.symlink/plugin/vm.vim	/^    let b:match_words = '#{\\?\\(if\\|foreach\\|define\\|macro\\|@[a-zA-Z][a-zA-Z0-9\\-_]*\\)\\s*('.':'$/;"	v
b:ruby_no_expensive	vim/vim.symlink/bundle/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:undo_ftplugin	vim/vim.symlink/bundle/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= "|setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	vim/vim.symlink/bundle/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	vim/vim.symlink/plugin/vm.vim	/^let b:undo_ftplugin = 'setlocal cinwords< comments< commentstring< formatoptions< |'$/;"	v
backspace	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller
backspace	vim/vim.symlink/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller
backspace!	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
backspace!	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
backup	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def backup(basedir, path)$/;"	f	class:VimRubyInstaller.BackupDir
bindir	vim/vim.symlink/ruby/command-t/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
buffer	vim/vim.symlink/bundle/Command-T/spec/command-t/scanner/buffer_scanner_spec.rb	/^  def buffer name$/;"	f
buffer	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_app	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def buffer_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
buffer_getline	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getvar	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_lines	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_repo	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_sha1	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
build_match_result	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def build_match_result(match, inside_segments)$/;"	f
build_quietly	vim/vim.symlink/bundle/Command-T/multi-spec.sh	/^function build_quietly()$/;"	f
cCommandTMatch	vim/vim.symlink/bundle/Command-T/ruby/command-t/ext.c	/^VALUE cCommandTMatch    = 0; \/\/ class CommandT::Match$/;"	v
cCommandTMatch	vim/vim.symlink/ruby/command-t/ext.c	/^VALUE cCommandTMatch    = 0; \/\/ class CommandT::Match$/;"	v
cCommandTMatcher	vim/vim.symlink/bundle/Command-T/ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
cCommandTMatcher	vim/vim.symlink/ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
cache_clear	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cancel	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller
cancel	vim/vim.symlink/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller
capture	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^    def self.capture cmd$/;"	F	class:CommandT.VIM
cfiles	vim/vim.symlink/bundle/Command-T/Makefile	/^cfiles      := $(shell find ruby -name '*.c')$/;"	m
cheaders	vim/vim.symlink/bundle/Command-T/Makefile	/^cheaders    := $(shell find ruby -name '*.h')$/;"	m
check_ruby_1_9_2	vim/vim.symlink/bundle/Command-T/spec/command-t/controller_spec.rb	/^  def check_ruby_1_9_2$/;"	f
clear	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller
clear	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow
clear	vim/vim.symlink/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller
clear	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow
clear!	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clear!	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
close	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
close	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
coffee_make_options	vim/vim.symlink/ftplugin/coffee.vim	/^  let coffee_make_options = ""$/;"	v
colors_name	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
columns	vim/vim.symlink/ruby/vim/screen.rb	/^    def self.columns$/;"	F	class:VIM.Screen
command	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
commits_between	bin/git-wtf	/^def commits_between from, to$/;"	f	class:red.green.yellow.cyan.grey.purple
comp_alpha	vim/vim.symlink/bundle/Command-T/ruby/command-t/matcher.c	/^int comp_alpha(const void *a, const void *b)$/;"	f
comp_alpha	vim/vim.symlink/ruby/command-t/matcher.c	/^int comp_alpha(const void *a, const void *b)$/;"	f
comp_score	vim/vim.symlink/bundle/Command-T/ruby/command-t/matcher.c	/^int comp_score(const void *a, const void *b)$/;"	f
comp_score	vim/vim.symlink/ruby/command-t/matcher.c	/^int comp_score(const void *a, const void *b)$/;"	f
compact	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:compact(ary)$/;"	f
compatibility_check	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:compatibility_check()$/;"	f
completion_filter	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
contents	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def contents$/;"	f	class:VimRubyInstaller.BackupDir
controller	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
copy	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(path)$/;"	f	class:TargetDirectory
copy	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(source_path, target_path)$/;"	f	class:FileWriter
current_compiler	vim/vim.symlink/bundle/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	vim/vim.symlink/bundle/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	vim/vim.symlink/bundle/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	vim/vim.symlink/bundle/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
cursor_end	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller
cursor_end	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_end	vim/vim.symlink/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller
cursor_end	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller
cursor_left	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_left	vim/vim.symlink/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller
cursor_left	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_right	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller
cursor_right	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_right	vim/vim.symlink/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller
cursor_right	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_start	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller
cursor_start	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
cursor_start	vim/vim.symlink/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller
cursor_start	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
cyan	bin/git-wtf	/^def cyan s; $color ? "\\033[36m#{s}\\033[0m" : s end$/;"	f	class:red.green.yellow
datadir	vim/vim.symlink/ruby/command-t/Makefile	/^datadir = $(datarootdir)$/;"	m
datarootdir	vim/vim.symlink/ruby/command-t/Makefile	/^datarootdir = $(prefix)\/share$/;"	m
debug	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
default_open_command	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller
default_open_command	vim/vim.symlink/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller
define_commands	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
delete	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller
delete	vim/vim.symlink/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller
delete!	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
delete!	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
depends	vim/vim.symlink/bundle/Command-T/Makefile	/^depends     := $(shell find ruby -name depend)$/;"	m
determine_home_dir	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_home_dir$/;"	F	class:Env
determine_shared_prefix	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def determine_shared_prefix$/;"	f
determine_source_directory	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_source_directory$/;"	F	class:Env
determine_target_os	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_target_os$/;"	F	class:Env
determine_vim_dir	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_vim_dir$/;"	F	class:Env
did_haml_syntax_inits	vim/vim.symlink/syntax/haml.vim	/^    let did_haml_syntax_inits = 1$/;"	v
did_javascript_syn_inits	vim/vim.symlink/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_less_syn_inits	vim/vim.symlink/syntax/less.vim	/^    let did_less_syn_inits = 1$/;"	v
diff_window_count	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffoff	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
directory_name	zsh/prompt.zsh	/^directory_name(){$/;"	f
dispose	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
dispose	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
djump	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
dldflags	vim/vim.symlink/ruby/command-t/Makefile	/^dldflags = $/;"	m
docdir	vim/vim.symlink/ruby/command-t/Makefile	/^docdir = $(datarootdir)\/doc\/$(PACKAGE)$/;"	m
dot_file	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:
dot_file	vim/vim.symlink/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon2	file:
dprint	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dump_failure	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^        def dump_failure counter, failure$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dump_pending	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^        def dump_pending; end$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dump_summary	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^        def dump_summary duration, example_count, failure_count, pending_count$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dvidir	vim/vim.symlink/ruby/command-t/Makefile	/^dvidir = $(docdir)$/;"	m
edit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
endof	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
enforce_usage	bin/run-command-on-git-revisions	/^enforce_usage() {$/;"	f
ensure_appropriate_window_selection	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller
ensure_appropriate_window_selection	vim/vim.symlink/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller
ensure_cache_under_limit	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    def ensure_cache_under_limit$/;"	f	class:CommandT.FileScanner
environment	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
environmentEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:environmentEdit(cmd,...)$/;"	f
environmentList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:environmentList(A,L,P)$/;"	f
error	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
error_exit	vim/vim.symlink/bundle/vim-ruby/etc/release/cvsrelease	/^function error_exit() {$/;"	f
escape_for_single_quotes	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escape_for_single_quotes	vim/vim.symlink/ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escape_for_single_quotes	vim/vim.symlink/ruby/vim.rb	/^  def self.escape_for_single_quotes str$/;"	F	class:VIM
escarg	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
escvar	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:escvar(r)$/;"	f
exec_prefix	vim/vim.symlink/ruby/command-t/Makefile	/^exec_prefix = $(prefix)$/;"	m
exists	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^    def self.exists? str$/;"	F	class:CommandT.VIM
exists?	vim/vim.symlink/ruby/command-t/controller.rb	/^    def exists? name$/;"	f	class:CommandT.Controller
extout	vim/vim.symlink/ruby/command-t/Makefile	/^extout = $/;"	m
extout_prefix	vim/vim.symlink/ruby/command-t/Makefile	/^extout_prefix = $/;"	m
extractdbvar	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
file_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def file_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
file_getline	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
find	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
find	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
find	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  def find(pattern, max=nil)$/;"	f	class:FuzzyFileFinder
find_file	bin/git-wtf	/^def find_file fn$/;"	f	class:Numeric
find_target_directory	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def find_target_directory$/;"	f	class:TargetDirectory
findamethod	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findedit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
finder	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def self.finder$/;"	F	class:TargetDirectory
findfromview	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findview	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
fixturesEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flush	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller
flush	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^    def flush$/;"	f	class:CommandT.Finder
flush	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
flush	vim/vim.symlink/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller
flush	vim/vim.symlink/ruby/command-t/finder.rb	/^    def flush$/;"	f	class:CommandT.Finder
flush	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
flush	vim/vim.symlink/ruby/command-t/stub.rb	/^    def flush$/;"	f	class:CommandT.Stub
fnameescape	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
focus	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
focus	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
follow_tree	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def follow_tree(directory)$/;"	f	class:FuzzyFileFinder
foo	vim/vim.symlink/bundle/vim-ruby/etc/examples/indent/continuation_blocks.rb	/^def foo$/;"	f
format	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:format(...)$/;"	f
format_commit_info	bin/gbrt	/^def format_commit_info timestamp, time_desc, commit_id, message, ref_name$/;"	f
fugitive	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#reload_status	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_remove	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_temp	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
functionaltestEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestEdit(cmd,...)$/;"	f
functionaltestList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestList(A,L,P)$/;"	f
fuzzyglob	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
g:ackprg	vim/vim.symlink/bundle/ack.vim/plugin/ack.vim	/^	let g:ackprg="ack -H --nocolor --nogroup --column"$/;"	v
g:autoloaded_rails	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '4.4'$/;"	v
g:colors_name	vim/vim.symlink/colors/grb256.vim	/^let g:colors_name = "grb256"$/;"	v
g:command_t_loaded	vim/vim.symlink/bundle/Command-T/plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:did_ruby_ftplugin_functions	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:eco_default_subtype	vim/vim.symlink/syntax/eco.vim	/^  let g:eco_default_subtype = "html"$/;"	v
g:eruby_default_subtype	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fugitive_git_executable	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_commentary	vim/vim.symlink/bundle/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_eunuch	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^let g:loaded_eunuch = 1$/;"	v
g:loaded_fugitive	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_pathogen	vim/vim.symlink/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_rails	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_togglebg	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:rubycomplete_buffer_loading	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g<C-]>	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g]	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
get_bool	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller
get_bool	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_bool	vim/vim.symlink/ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller
get_bool	vim/vim.symlink/ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_cursor_highlight	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow
get_cursor_highlight	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow
get_list_or_string	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller
get_list_or_string	vim/vim.symlink/ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller
get_number	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller
get_number	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_number	vim/vim.symlink/ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller
get_number	vim/vim.symlink/ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_string	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller
get_string	vim/vim.symlink/ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller
getopt	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:getopt(opt,...)$/;"	f
getpidfor	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:getpidfor(bind,port)$/;"	f
gf	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
git_branch	zsh/prompt.zsh	/^git_branch() {$/;"	f
git_dirty	zsh/prompt.zsh	/^git_dirty() {$/;"	f
git_prompt_info	zsh/prompt.zsh	/^git_prompt_info () {$/;"	f
github_url	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
go	vim/vim.symlink/bundle/vim-commentary/plugin/commentary.vim	/^function! s:go(type) abort$/;"	f
green	bin/git-wtf	/^def green s; $color ? "\\033[32m#{s}\\033[0m" : s end$/;"	f	class:red
grey	bin/git-wtf	/^def grey s; $color ? "\\033[1;30m#{s}\\033[0m" : s end$/;"	f	class:red.green.yellow.cyan
gsub	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
handle_key	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller
handle_key	vim/vim.symlink/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller
has_syntax	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
has_syntax	vim/vim.symlink/ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
has_syntax	vim/vim.symlink/ruby/vim.rb	/^  def self.has_syntax?$/;"	F	class:VIM
hdrdir	vim/vim.symlink/ruby/command-t/Makefile	/^hdrdir = $(topdir)$/;"	m
help	bin/spark	/^help()$/;"	f
helperEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:helperEdit(cmd,...)$/;"	f
helperList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:helperList(A,L,P)$/;"	f
helpermethods	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
hide	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide	vim/vim.symlink/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide_cursor	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow
hide_cursor	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow
hs_highlight_boolean	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
htmldir	vim/vim.symlink/ruby/command-t/Makefile	/^htmldir = $(docdir)$/;"	m
htmlize	bin/git-rank-contributers	/^  def htmlize; gsub("&", "&amp;").gsub("<", "&lt;").gsub(">", "&gt;") end$/;"	f	class:String.obfuscate
iM	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
ignore?	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def ignore?(name)$/;"	f	class:FuzzyFileFinder
im	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
includedir	vim/vim.symlink/ruby/command-t/Makefile	/^includedir = $(prefix)\/include$/;"	m
infodir	vim/vim.symlink/ruby/command-t/Makefile	/^infodir = $(DESTDIR)\/usr\/share\/info$/;"	m
initOpenURL	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/jump_finder.rb	/^    def initialize$/;"	f	class:CommandT.JumpFinder
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/tag_finder.rb	/^    def initialize options = {}$/;"	f	class:CommandT.TagFinder
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/tag_scanner.rb	/^    def initialize options = {}$/;"	f	class:CommandT.TagScanner
initialize	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def initialize(path)$/;"	f	class:VimRubyInstaller.BackupDir
initialize	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(directory, writer)$/;"	f	class:TargetDirectory
initialize	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(ending, file_permissions=0644, directory_permissions=0755)$/;"	f	class:FileWriter
initialize	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(source, target)$/;"	f	class:VimRubyInstaller
initialize	vim/vim.symlink/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	vim/vim.symlink/ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	vim/vim.symlink/ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	vim/vim.symlink/ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	vim/vim.symlink/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def initialize(name, is_root=false)$/;"	f	class:FuzzyFileFinder.Directory
initialize	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def initialize(parent, name)$/;"	f	class:FuzzyFileFinder.FileSystemEntry
initialize	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  def initialize(directories=['.'], ceiling=10_000, ignores=nil)$/;"	f	class:FuzzyFileFinder
initializerEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:initializerEdit(cmd,...)$/;"	f
initializerList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:initializerList(A,L,P)$/;"	f
inspect	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  def inspect #:nodoc:$/;"	f	class:FuzzyFileFinder
install	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def install$/;"	f	class:VimRubyInstaller
instaweb_url	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
integrationtestEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestEdit(cmd,...)$/;"	f
integrationtestList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestList(A,L,P)$/;"	f
invertrange	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
javascriptEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
jump_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def jump_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
jumps	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/jump_scanner.rb	/^    def jumps$/;"	f	class:CommandT.JumpScanner
lastformat	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:lastformat(start)$/;"	f
lastmethod	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
layoutEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
ldflags	vim/vim.symlink/ruby/command-t/Makefile	/^ldflags  = -L. -arch i386 -arch x86_64 $/;"	m
leave	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller
leave	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
leave	vim/vim.symlink/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller
leave	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
libEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:libEdit(cmd,...)$/;"	f
libList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:libList(A,L,P)$/;"	f
libdir	vim/vim.symlink/ruby/command-t/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libexecdir	vim/vim.symlink/ruby/command-t/Makefile	/^libexecdir = $(exec_prefix)\/libexec$/;"	m
libpath	vim/vim.symlink/ruby/command-t/Makefile	/^libpath = . $(libdir)$/;"	m
line_contains_filename?	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/jump_scanner.rb	/^    def line_contains_filename? line$/;"	f	class:CommandT.JumpScanner
linepeak	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
lines	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
lines	vim/vim.symlink/ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
lines	vim/vim.symlink/ruby/vim/screen.rb	/^    def self.lines$/;"	F	class:VIM.Screen
list_matches	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
list_matches	vim/vim.symlink/ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
loaded_taglist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
localeEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localedir	vim/vim.symlink/ruby/command-t/Makefile	/^localedir = $(datarootdir)\/locale$/;"	m
localstatedir	vim/vim.symlink/ruby/command-t/Makefile	/^localstatedir = $(prefix)\/var$/;"	m
lock	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow
lock	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow
log_command	bin/run-command-on-git-revisions	/^log_command() {$/;"	f
mCommandT	vim/vim.symlink/bundle/Command-T/ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
mCommandT	vim/vim.symlink/ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
mailerEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:mailerEdit(cmd,...)$/;"	f
mailerList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:mailerList(A,L,P)$/;"	f
main	bin/run-command-on-git-revisions	/^main() {$/;"	f
main_syntax	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	vim/vim.symlink/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	vim/vim.symlink/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	vim/vim.symlink/syntax/less.vim	/^  let main_syntax = 'less'$/;"	v
make_pattern	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def make_pattern(pattern)$/;"	f	class:FuzzyFileFinder
makewithruby	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:makewithruby(arg,bang,...)$/;"	f
mandir	vim/vim.symlink/ruby/command-t/Makefile	/^mandir = $(DESTDIR)\/usr\/share\/man$/;"	m
map	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
map	vim/vim.symlink/ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_file	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def match_file(file, file_regex, path_match, &block)$/;"	f
match_for	vim/vim.symlink/bundle/Command-T/spec/command-t/match_spec.rb	/^  def match_for path, pattern$/;"	f
match_limit	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_limit	vim/vim.symlink/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_path	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def match_path(path, path_matches, path_regex, path_segments)$/;"	f
match_text_for_idx	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_text_for_idx	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_type	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
matchcursor	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matches=	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matches=	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matchinfo_t	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
matchinfo_t	vim/vim.symlink/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon2	file:
max_height	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def max_height$/;"	f	class:CommandT.Controller
max_score_per_char	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:
max_score_per_char	vim/vim.symlink/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon2	file:
menuBufEnter	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufEnter()$/;"	f
menuBufLeave	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufLeave()$/;"	f
menucmd	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:menucmd(priority)$/;"	f
menuprompt	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:menuprompt(vimcmd,prompt)$/;"	f
message	vim/vim.symlink/bundle/vim-ruby/etc/release/cvsrelease	/^function message() {$/;"	f
metalEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:metalEdit(cmd,...)$/;"	f
metalList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:metalList(A,L,P)$/;"	f
mextargs	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
migrationEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
min_height	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def min_height$/;"	f	class:CommandT.Controller
missing	vim/vim.symlink/bundle/Command-T/ruby/command-t/extconf.rb	/^def missing item$/;"	f
missing	vim/vim.symlink/ruby/command-t/extconf.rb	/^def missing item$/;"	f
mkeep	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkpath	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def mkpath(directory)$/;"	f	class:FileWriter
model	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
modelEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:modelEdit(cmd,...)$/;"	f
modelList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:modelList(A,L,P)$/;"	f
move_cursor_to_selected_line	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
move_cursor_to_selected_line	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
need_push	zsh/prompt.zsh	/^need_push () {$/;"	f
never_show_dot_files	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:
never_show_dot_files	vim/vim.symlink/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon2	file:
obfuscate	bin/git-rank-contributers	/^  def obfuscate; gsub(\/@\/, " at the ").gsub(\/\\.(\\w+)(>|$)\/, ' dot \\1s\\2') end$/;"	f	class:String
observerEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:observerEdit(cmd,...)$/;"	f
observerList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:observerList(A,L,P)$/;"	f
oldincludedir	vim/vim.symlink/ruby/command-t/Makefile	/^oldincludedir = $(DESTDIR)\/usr\/include$/;"	m
open_selection	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
open_selection	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^    def open_selection command, selection, options = {}$/;"	f	class:CommandT.Finder
open_selection	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder/tag_finder.rb	/^    def open_selection command, selection, options = {}$/;"	f	class:CommandT.TagFinder
open_selection	vim/vim.symlink/ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
opts	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:opts()$/;"	f
padding_for_selected_match	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow
padding_for_selected_match	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow
path	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def path$/;"	f	class:VimRubyInstaller.BackupDir
path	vim/vim.symlink/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def path$/;"	f	class:TargetDirectory
path	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def path$/;"	f	class:FuzzyFileFinder.FileSystemEntry
path=	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path=	vim/vim.symlink/ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path=	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    def path= str$/;"	f	class:CommandT.FileScanner
path_excluded?	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
path_excluded?	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
pathjoin	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathogen#cycle_filetype	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#glob	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_prepend_subdirectories	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	vim/vim.symlink/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
paths	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
paths	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/jump_scanner.rb	/^    def paths$/;"	f	class:CommandT.JumpScanner
paths	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/tag_scanner.rb	/^    def paths$/;"	f	class:CommandT.TagScanner
paths	vim/vim.symlink/ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	vim/vim.symlink/ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
pathsplit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pdfdir	vim/vim.symlink/ruby/command-t/Makefile	/^pdfdir = $(docdir)$/;"	m
pluginEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:pluginEdit(cmd,...)$/;"	f
pluginList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:pluginList(A,L,P)$/;"	f
pop_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
precmd	zsh/prompt.zsh	/^precmd() {$/;"	f
prefix	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^        let prefix = ''$/;"	v
prefix	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^        let prefix = 'env PATH='.$PATH.' '$/;"	v
prefix	vim/vim.symlink/ruby/command-t/Makefile	/^prefix = $(DESTDIR)\/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr$/;"	m
preload	vim/vim.symlink/ruby/command-t/Makefile	/^preload = $/;"	m
prephelp	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:prephelp()$/;"	f
print_error	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_error	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_match	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow
print_match	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow
print_matches	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow
print_matches	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow
print_no_such_file_or_directory	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_no_such_file_or_directory	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_tick	bin/spark	/^print_tick()$/;"	f
print_ticks	bin/spark	/^print_ticks()$/;"	f
project_name	zsh/prompt.zsh	/^project_name () {$/;"	f
project_name_color	zsh/prompt.zsh	/^project_name_color () {$/;"	f
psdir	vim/vim.symlink/ruby/command-t/Makefile	/^psdir = $(docdir)$/;"	m
purple	bin/git-wtf	/^def purple s; $color ? "\\033[35m#{s}\\033[0m" : s end$/;"	f	class:red.green.yellow.cyan.grey
push_chdir	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
pwd	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
pwd	vim/vim.symlink/ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
pwd	vim/vim.symlink/ruby/vim.rb	/^  def self.pwd$/;"	F	class:VIM
rails#app	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#log_syntax	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...)$/;"	f
rails#pluralize	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMenu	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginMenu$/;"	a
readable_app	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(lnum) dict abort$/;"	f
readable_define_pattern	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_last_format	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_format(start) dict abort$/;"	f
readable_last_method	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_preview_urls	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_related	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_type_name	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name() dict abort$/;"	f
readfile	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
recall	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
recursive_match	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,  \/\/ sharable meta-data$/;"	f
recursive_match	vim/vim.symlink/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,  \/\/ sharable meta-data$/;"	f
red	bin/git-wtf	/^def red s; $color ? "\\033[31m#{s}\\033[0m" : s end$/;"	f
redraw	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
redraw	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
register_for_key_presses	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
register_for_key_presses	vim/vim.symlink/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
relative_path_under_working_directory	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relative_path_under_working_directory	vim/vim.symlink/ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relativize_path	vim/vim.symlink/bundle/Command-T/spec/vim_formatter.rb	/^        def relativize_path path$/;"	f	class:Spec.Runner.Formatter.VimFormatter
relglob	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
render_commit_info	bin/gbrt	/^def render_commit_info timestamp, time_desc, commit_id, message, ref_name, merged$/;"	f
repo	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head_ref	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
rescan!	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  def rescan!$/;"	f	class:FuzzyFileFinder
resetomnicomplete	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
restore	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restore	vim/vim.symlink/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restore_window_dimensions	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
restore_window_dimensions	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
root?	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def root?$/;"	f	class:FuzzyFileFinder.Directory
rquote	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
ruby	vim/vim.symlink/ruby/command-t/Makefile	/^ruby = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/bin\/ruby$/;"	m
ruby_inspect	vim/vim.symlink/bundle/Command-T/ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
ruby_inspect	vim/vim.symlink/ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
ruby_minlines	vim/vim.symlink/bundle/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 50$/;"	v
ruby_version	vim/vim.symlink/ruby/command-t/Makefile	/^ruby_version = 1.8$/;"	m
rubycomplete#Complete	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rubyfiles	vim/vim.symlink/bundle/Command-T/Makefile	/^rubyfiles   := $(shell find ruby -name '*.rb')$/;"	m
rubylibdir	vim/vim.symlink/ruby/command-t/Makefile	/^rubylibdir = $(libdir)\/ruby\/$(ruby_version)$/;"	m
run_tests	bin/run-command-on-git-revisions	/^run_tests() {$/;"	f
rvm_prompt	zsh/prompt.zsh	/^rvm_prompt(){$/;"	f
s:COMPOUND_ASSIGNMENT	vim/vim.symlink/indent/coffee.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:CONTINUATION	vim/vim.symlink/indent/coffee.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	vim/vim.symlink/indent/coffee.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:DOT_ACCESS	vim/vim.symlink/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:INDENT_AFTER_KEYWORD	vim/vim.symlink/indent/coffee.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	vim/vim.symlink/indent/coffee.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:MAX_LOOKBACK	vim/vim.symlink/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:OUTDENT_AFTER	vim/vim.symlink/indent/coffee.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:POSTFIX_CONDITION	vim/vim.symlink/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:SINGLE_LINE_ELSE	vim/vim.symlink/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	vim/vim.symlink/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	vim/vim.symlink/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	vim/vim.symlink/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:Tlist_Skip_Refresh	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:abstract_prototype	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:app_prototype	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:b	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:block_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	vim/vim.symlink/indent/javascript.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:blue	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bracket_continuation_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bright	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buffer_prototype	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:c	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_prototype	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:code	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^      let s:code = "print $:.join(%q{,})"$/;"	v
s:colorscheme_list	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:commands	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:continuation_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	vim/vim.symlink/indent/javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:cpo_save	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/vim.symlink/plugin/vm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cyan	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:defaults_list	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:did_snip_helper	vim/vim.symlink/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	vim/vim.symlink/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:done_bundles	vim/vim.symlink/autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:efm_backtrace	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:end_end_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:end_start_regex = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:fg_pdef	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:file	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:green	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:i	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:lazycat_list	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:line_term	vim/vim.symlink/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	vim/vim.symlink/bundle/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	vim/vim.symlink/syntax/eco.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:magenta	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:match_words	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:menu_char_prefix	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:msl_regex	vim/vim.symlink/indent/javascript.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:n	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:non_bracket_continuation_regex	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:none	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:ob	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:one_line_scope_regex	vim/vim.symlink/indent/javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:options_list	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:ou	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:r	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:readable_prototype	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:red	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:repo_prototype	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:ruby_deindent_keywords	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^      let s:ruby_path = substitute(&g:path,',,$',',','') . ',' . s:ruby_path$/;"	v
s:ruby_path	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    let s:ruby_path = substitute(join(s:ruby_paths,","), '\\%(^\\|,\\)\\.\\%(,\\|$\\)', ',,', '')$/;"	v
s:ruby_path	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^    let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path,',') : g:ruby_path$/;"	v
s:ruby_paths	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^        let s:ruby_paths = split(system(prefix."ruby -e '" . s:code . "'"),',')$/;"	v
s:ruby_paths	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^        let s:ruby_paths = split(system(prefix.'ruby -e "' . s:code . '"'),',')$/;"	v
s:ruby_paths	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^      let s:ruby_paths = split($RUBYLIB,':')$/;"	v
s:rubycomplete_debug	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	vim/vim.symlink/bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:s	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:sid	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_expr	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	vim/vim.symlink/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:solarized_termtrans_default	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sp_back	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:syng_strcom	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_strcom	vim/vim.symlink/indent/javascript.vim	/^let s:syng_strcom = '\\<javaScript\\%(RegexpString\\|CommentTodo\\|LineComment\\|Comment\\|DocComment\\)\\>'$/;"	v
s:syng_string	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	vim/vim.symlink/indent/javascript.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	vim/vim.symlink/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:syng_stringdoc	vim/vim.symlink/indent/javascript.vim	/^let s:syng_stringdoc =$/;"	v
s:t_none	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:temp00	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:terminal_italic	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:tlist_app_name	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	vim/vim.symlink/bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:u	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vim/vim.symlink/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:view_types	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,mab,liquid,haml,dryml,mn,slim',',')$/;"	v
s:violet	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:yellow	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	vim/vim.symlink/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
sanitize_path_string	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller
sanitize_path_string	vim/vim.symlink/ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller
save	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
save	vim/vim.symlink/ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
sbindir	vim/vim.symlink/ruby/command-t/Makefile	/^sbindir = $(exec_prefix)\/sbin$/;"	m
scanlineforuris	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
schemaEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P)$/;"	f
scrub	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:scrub(collection,item)$/;"	f
search	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^  def search(pattern, &block)$/;"	f	class:FuzzyFileFinder
searchsyn	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
select	vim/vim.symlink/bundle/Command-T/ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select	vim/vim.symlink/ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select	vim/vim.symlink/ruby/vim/window.rb	/^    def select$/;"	f	class:VIM.Window
select_next	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller
select_next	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_next	vim/vim.symlink/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller
select_next	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_prev	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller
select_prev	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
select_prev	vim/vim.symlink/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller
select_prev	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
selected?	vim/vim.symlink/ruby/vim/window.rb	/^    def selected?$/;"	f	class:VIM.Window.select
selection	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
selection	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
selectiveexpand	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
set_bool	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_bool	vim/vim.symlink/ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_number	vim/vim.symlink/bundle/Command-T/ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_number	vim/vim.symlink/ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_prompt	zsh/prompt.zsh	/^ set_prompt () {$/;"	f
set_status	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_status	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_up_file_finder	vim/vim.symlink/ruby/command-t/controller.rb	/^    def set_up_file_finder$/;"	f	class:CommandT.Controller
set_up_max_height	vim/vim.symlink/ruby/command-t/controller.rb	/^    def set_up_max_height$/;"	f	class:CommandT.Controller
setopt	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:setopt(opt,val)$/;"	f
setup_array	bin/spark	/^setup_array() {$/;"	f
sharedstatedir	vim/vim.symlink/ruby/command-t/Makefile	/^sharedstatedir = $(prefix)\/com$/;"	m
shebang_chmod	vim/vim.symlink/bundle/vim-eunuch/plugin/eunuch.vim	/^augroup shebang_chmod$/;"	a
shellesc	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
show	bin/git-wtf	/^def show b$/;"	f	class:red.green.yellow.cyan.grey
show	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller
show	vim/vim.symlink/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller
show_buffer_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_buffer_finder	vim/vim.symlink/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_commits	bin/git-wtf	/^def show_commits commits, prefix="    "$/;"	f	class:red.green.yellow.cyan.grey.purple.commits_between
show_cursor	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow
show_cursor	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow
show_file_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_file_finder	vim/vim.symlink/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_file_finder	vim/vim.symlink/ruby/command-t/stub.rb	/^    def show_file_finder$/;"	f	class:CommandT.Stub
show_jump_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def show_jump_finder$/;"	f	class:CommandT.Controller
show_relations	bin/git-wtf	/^def show_relations b, all_branches$/;"	f	class:red.green.yellow.cyan
show_tag_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def show_tag_finder$/;"	f	class:CommandT.Controller
showversion	vim/vim.symlink/bundle/vim-ruby/etc/release/cvsrelease	/^function showversion() {$/;"	f
sitearch	vim/vim.symlink/ruby/command-t/Makefile	/^sitearch = universal-darwin10.0$/;"	m
sitearchdir	vim/vim.symlink/ruby/command-t/Makefile	/^sitearchdir = $(sitelibdir)\/$(sitearch)$/;"	m
sitedir	vim/vim.symlink/ruby/command-t/Makefile	/^sitedir = $(DESTDIR)\/Library\/Ruby\/Site$/;"	m
sitelibdir	vim/vim.symlink/ruby/command-t/Makefile	/^sitelibdir = $(sitedir)\/$(ruby_version)$/;"	m
sname	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
sort_max	bin/spark	/^sort_max()$/;"	f
sort_min	bin/spark	/^sort_min()$/;"	f
sorted_matches_for	vim/vim.symlink/bundle/Command-T/ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
sorted_matches_for	vim/vim.symlink/ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
specEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...)$/;"	f
specList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
srcdir	vim/vim.symlink/ruby/command-t/Makefile	/^srcdir = .$/;"	m
startswith	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
str_len	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    long    str_len;                \/\/ length of same$/;"	m	struct:__anon1	file:
str_len	vim/vim.symlink/ruby/command-t/match.c	/^    long    str_len;                \/\/ length of same$/;"	m	struct:__anon2	file:
str_p	vim/vim.symlink/bundle/Command-T/ruby/command-t/match.c	/^    char    *str_p;                 \/\/ pointer to string to be searched$/;"	m	struct:__anon1	file:
str_p	vim/vim.symlink/ruby/command-t/match.c	/^    char    *str_p;                 \/\/ pointer to string to be searched$/;"	m	struct:__anon2	file:
stub_finder	vim/vim.symlink/bundle/Command-T/spec/command-t/controller_spec.rb	/^  def stub_finder(sorted_matches=[])$/;"	f
stub_match_window	vim/vim.symlink/bundle/Command-T/spec/command-t/controller_spec.rb	/^  def stub_match_window(selection)$/;"	f
stub_prompt	vim/vim.symlink/bundle/Command-T/spec/command-t/controller_spec.rb	/^  def stub_prompt(abbrev='')$/;"	f
stub_vim	vim/vim.symlink/bundle/Command-T/spec/command-t/controller_spec.rb	/^  def stub_vim(working_directory)$/;"	f
stylesheetEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	vim/vim.symlink/bundle/vim-rails/plugin/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
synname	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
sysconfdir	vim/vim.symlink/ruby/command-t/Makefile	/^sysconfdir = $(prefix)\/etc$/;"	m
tag_finder	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def tag_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
taglist	vim/vim.symlink/bundle/Command-T/ruby/command-t/scanner/tag_scanner.rb	/^    def taglist$/;"	f	class:CommandT.TagScanner.paths
target_prefix	vim/vim.symlink/ruby/command-t/Makefile	/^target_prefix = $/;"	m
taskEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:taskEdit(cmd,...)$/;"	f
taskList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:taskList(A,L,P)$/;"	f
throw	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
tidyup	vim/vim.symlink/bundle/vim-ruby/etc/release/cvsrelease	/^function tidyup() {$/;"	f
tier	bin/spark	/^tier()$/;"	f
title	zsh/window.zsh	/^function title() {$/;"	f
to_s	vim/vim.symlink/ruby/fuzzy_file_finder.rb	/^    def to_s$/;"	f	class:FuzzyFileFinder.CharacterRun
toggle_focus	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller
toggle_focus	vim/vim.symlink/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller
togglebg#map	vim/vim.symlink/bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
topdir	vim/vim.symlink/ruby/command-t/Makefile	/^topdir = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/lib\/ruby\/1.8\/universal-darwin10.0$/;"	m
truncated_match	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow
truncated_match	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow
try	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:try(cmd) abort$/;"	f
txtfiles	vim/vim.symlink/bundle/Command-T/Makefile	/^txtfiles    := $(shell find doc -name '*.txt')$/;"	m
unfocus	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	vim/vim.symlink/bundle/Command-T/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
unfocus	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	vim/vim.symlink/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
uniq	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list)$/;"	f
unittestEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:unittestEdit(cmd,...)$/;"	f
unittestList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:unittestList(A,L,P)$/;"	f
unload	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller
unload	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unload	vim/vim.symlink/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller
unload	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unlock	vim/vim.symlink/bundle/Command-T/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow
unlock	vim/vim.symlink/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow
unpushed	zsh/prompt.zsh	/^unpushed () {$/;"	f
usage	bin/run-command-on-git-revisions	/^usage() {$/;"	f
usage	vim/vim.symlink/bundle/vim-ruby/etc/release/cvsrelease	/^function usage() {$/;"	f
usage	vim/vim.symlink/bundle/vim-ruby/etc/release/release.sh	/^usage() {$/;"	f
vendorarchdir	vim/vim.symlink/ruby/command-t/Makefile	/^vendorarchdir = $(vendorlibdir)\/$(sitearch)$/;"	m
vendordir	vim/vim.symlink/ruby/command-t/Makefile	/^vendordir = $(libdir)\/ruby\/vendor_ruby$/;"	m
vendorlibdir	vim/vim.symlink/ruby/command-t/Makefile	/^vendorlibdir = $(vendordir)\/$(ruby_version)$/;"	m
viewEdit	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
viewspattern	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:viewspattern()$/;"	f
vimfiles	vim/vim.symlink/bundle/Command-T/Makefile	/^vimfiles    := $(shell find plugin -name '*.vim')$/;"	m
vt100?	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def vt100?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
vt100?	vim/vim.symlink/ruby/command-t/controller.rb	/^    def vt100?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
warn	vim/vim.symlink/bundle/Command-T/ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
warn	vim/vim.symlink/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warn	vim/vim.symlink/bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warn	vim/vim.symlink/ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
widget	bin/git-wtf	/^def widget merged_in, remote_only=false, local_only=false, local_only_merge=false$/;"	f	class:red.green.yellow.cyan.grey.purple.commits_between
wrap_a	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	vim/vim.symlink/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
xterm?	vim/vim.symlink/bundle/Command-T/ruby/command-t/controller.rb	/^    def xterm?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
xterm?	vim/vim.symlink/ruby/command-t/controller.rb	/^    def xterm?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
yellow	bin/git-wtf	/^def yellow s; $color ? "\\033[33m#{s}\\033[0m" : s end$/;"	f	class:red.green
